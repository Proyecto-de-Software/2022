FORMAT: 1A
HOST: https://grupoXX.proyecto2022.unlp.edu.ar

# Documentación API a implementar
Documentación online de la api a realizar en el trabajo integrador de la materia
*Projecto de Software* de la **UNLP**.

## Aplicación para club
En esta documentación describiremos los endpoints que creemos que son escenciales
para la implementación correcta de la aplicación.

Estos endpionts serán implementados en la _**aplicación privada**_ que les solicitamos
y consultados/usados desde la _**aplicación pública**_.

::: note
## Nota
Recordá que estos endpoints son los mínimos que nos imaginamos desde la cátedra
como necesarios.

Si dentro del grupo o el doncente asignado consideran que es necesario agregar
algún otro debido a la particularidades de la solución elegida deberán agregarlos.
:::

# Data Structures

## PagoData
+ month: 1 (number, required) - Número de mes correspondiente al pago.
+ amount: 100 (string, required) - Monto de pago.

## PagoListData (array)
+ (PagoData)

## DisciplinaData
+ name: Tiro al pichón (string, required) - Nombre de la disciplina.
+ days: Lunes y Miércoles (string, required) - Días en los que se realiza la disciplina.
+ time: de 14 a 16hs (string, required) - Horario donde se realiza la disciplina.
+ teacher: Charlton Heston (string, required) - Nombre de persona a cargo de la misma.

## ClubData
+ email: clubdeportivovillaelisa@gmail.com (string, required) - Correo electrónico del club
+ phone: `0221 487-0193` (string, required) - Teléfono del club

## EstadoData
+ status: OK (string, required) - Valor del estado.
+ desciption: El socio no registra deuda ni sanción. (string, required) - Descripción del estado.

# Group Club

## Información del club [/api/club/info]

### Obtiene información de la institución [GET]

Obtiene información importante y de contacto sobre el club.

**Información del endpoint**

<i class="fa fa-times"></i> Requiere autenticación

+ Response 200 (application/json)
    + Attributes (ClubData)

## Información de las disciplinas [/api/club/disciplines]

### Obtiene todas las disciplinas de la entidad [GET]

Obtiene todas las disciplinas que se realizan en la entidad.

**Información del endpoint**

<i class="fa fa-times"></i> Requiere autenticación

+ Response 200 (application/json)
    + Attributes (DisciplinaData)

# Group Autenticación

## Login [/api/auth]

Se requiere de un token de acceso para acceder a los endpoints de información
de socio.

### Obtener token [POST]

Permite obtener el un JSON Web Token válido para el usuario y password.

**Información del endpoint**

<i class="fa fa-times"></i> Requiere autenticación

+ Request (application/json)
    + Attributes
        + user: `john.doe@mail.com` (string, required) - User email address
        + password: `QXR0mi38a2` (string, required) - User password

+ Response 200 (application/json)
    + Attributes
        + token: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9....` (string) - JSON Web Token.


# Group Usuario

## Pagos del usuario actual [/api/me/pagos]

### Obtiene el listado de pagos del usuario [GET]

Obtiene la lista de pagos registrados del usuario autentificado.

**Información del endpoint**

<i class="fa fa-check"></i> Requiere autenticación

+ Request
    + Headers

            Authorization: JWT <token>

+ Response 200 (application/json)
    + Attributes (PagoListData)

### Registra un nuevo pago del socio [POST]

Registra un nuevo pago para el usuario autentificado.

**Información del endpoint**

<i class="fa fa-check"></i> Requiere autenticación

+ Request
    + Headers

            Authorization: JWT <token>

+ Response 200 (application/json)
    + Attributes (PagoListData)

## Estado de socio del usuario actual [/api/me/carnet]

### Obtiene el estado de credencial de socio [GET]

Obtiene del socio y el estado de cuenta del usuario autentificado.

**Información del endpoint**

<i class="fa fa-check"></i> Requiere autenticación

+ Request
    + Headers

            Authorization: JWT <token>

+ Response 200 (application/json)
    + Attributes (EstadoData)
